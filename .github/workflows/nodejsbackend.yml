name: Expressjs CI / CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: echo "Testing Phase..."

  build:
    needs: test
    runs-on: ubuntu-latest

    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Configuration
        env:
          ENV_FILE: ${{ secrets.ENV }}
        run: |
          echo $ENV_FILE | tr " " "\n" >> .env

      - name: Build, tag, and push image
        env:
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          echo "Building Phase..."
          docker login -u $USERNAME -p $PASSWORD
          docker build -t express . --no-cache
          docker tag express donnytri/expressjs:latest
          docker push donnytri/expressjs:latest
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESSKEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESSKEY }}
          aws-region: ${{ secrets.AWS_REGION_SIN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1    

      - name: Deploy image
        run: |
          echo "Deploying Phase..."
      - name: Deploy K8 Deployment
        id: kubectl
        uses: ianbelcher/eks-kubectl-action@master
        with:
          cluster_name: ${{ secrets.CLUSTER_NAME }}
          args: rollout restart deployment/${{ secrets.DEPLOYMENT_NAME }} -n ${{ secrets.NAMESPACE }}






deploy:
    needs: build
    runs-on: ubuntu-latest
    
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESSKEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESSKEY }}
          aws-region: ${{ secrets.AWS_REGION_SIN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1     

      - name: Restart K8 Deployment
        id: kubectl
        uses: ianbelcher/eks-kubectl-action@master
        with:
          cluster_name: ${{ secrets.CLUSTER_NAME_PRODUCTION }}
          args: rollout restart deployment/${{ secrets.DEPLOYMENT_NAME_PRODUCTION }} -n ${{ secrets.NAMESPACE_PRODUCTION }}